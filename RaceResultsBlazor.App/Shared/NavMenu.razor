@using RaceResultsBlazor.App.Services
@using RaceResultsBlazor.App.Models
@inject ResultsService ResultsService
@inject NavigationManager NavManager

<div>
    <div class="top-row">
        <Button class="nav-item px-3" @onclick="@RefreshData"> <span class="oi oi-reload mr-2" /></Button>
    </div>
    @foreach (var serie in series)
    {
    <div class="dropdown">
        <a class="btn btn-secondary dropdown-toggle" role="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <h5>@serie.Title</h5>
        </a>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @if (serie.ContainsDriverResults)
            {
            <NavLink class="dropdown-item" href="@serie.DriversLink">
                Drivers standings
            </NavLink>
            }
            @if (serie.ContainsTeamResults)
            {
            <NavLink class="dropdown-item" href="@serie.TeamsLink">
                Teams standings
            </NavLink>
            }
        </div>
    </div>
    }
</div>

@code {
    private SeriesInfo[] series;

    protected override async Task OnInitializedAsync()
    {
        series = await ResultsService.GetSeriesAsync();
    }

    protected async Task RefreshData()
    {
        NavManager.NavigateTo("/");

        await ResultsService.RefreshData();

        series = await ResultsService.GetSeriesAsync();
    }
}
